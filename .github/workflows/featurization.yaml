name: FeaturizationWorker

on: 
  issue_comment:
    types: [created]
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-14
    steps:
    - uses: actions/checkout@v4

    - name: Respond to comment
      uses: actions/github-script@v5
      with:
        script: |
          const issueComment = context.payload.comment;
          const issue = context.issue;
          const regex = /!\[image]\((.*?)\)/g;
          const matches = issueComment.body.match(regex);

          let message;
          if (matches && matches.length > 0) {
            message = 'ðŸ˜„ I found an attachment in your comment. I will attempt to download it.';
          } else {
            message = 'ðŸ˜¢ Your comment does not contain any attachments.';
          }

          github.rest.issues.createComment({
            owner: issue.owner,
            repo: issue.repo,
            issue_number: issue.number,
            body: message
          });

          return matches ? matches[0].slice(10, -1) : null;
    - name: Download attachment
      run: |
        if [ -n "${{ steps.respond.outputs.result }}" ]; then
          curl -O ${{ steps.respond.outputs.result }}
        fi

    - name: Unzip attachment into structures
      uses: montudor/action-zip@v1
      with:
        args: unzip -qq attachment.zip -d structures

    - name: Verify file extensions
      uses: actions/github-script@v5
      with:
        script: |
          const fs = require('fs');
          const path = require('path');

          const issueComment = context.payload.comment;
          const issueUrl = issueComment.issue_url;

          const fileNames = fs.readdirSync('structures');
          for (const fileName of fileNames) {
            const extension = path.extname(fileName);
            if (extension !== '.poscar' && extension !== '.cif') {
              await github.issues.createComment({
                issue_url: issueUrl,
                body: 'ðŸ˜¢ Not all files have a POSCAR or CIF extension.'
              });
              return;
            }
          }

          await github.issues.createComment({
            issue_url: issueUrl,
            body: 'ðŸŽ‰ Received your strcuture files:\n' + fileNames.join('\n')
          });

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
        cache: 'pip'
        cache-dependency-path: 'featurization/requirements.txt'

    - name: Install dependencies
      run: |
        python -m pip install -r featurization/requirements.txt

    - name: Test that pysipfenn is available
      run: python -c "import pysipfenn; c = pysipfenn.Calculator()"
