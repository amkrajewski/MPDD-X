name: FeaturizationWorker

on: 
  issue_comment:
    types: [created]
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-14
    steps:
    - uses: actions/checkout@v4

    - name: Respond to comment
      id: respond
      run: |
        MATCH=$(echo '${{ github.event.comment.body }}' | grep -oP 'https://[^\s]+\.zip')
        if [[ -n "$MATCH" ]]; then
          echo "MATCH=$MATCH" >> $GITHUB_ENV
          echo "MESSAGE=👍 [1/3] I found a ZIP file linked in your comment. I will now attempt to download it and validate contents." >> $GITHUB_ENV
        else
          echo "MATCH=false" >> $GITHUB_ENV
          echo "MESSAGE=😢 Your comment does not contain any direct links to ZIP files. Please note that certain cloud providers do not support that. Try to directly drag-and-drop into a comment." >> $GITHUB_ENV
        fi
      shell: bash

    - name: Post comment
      uses: actions/github-script@v5
      with:
        script: |
          github.rest.issues.createComment({
            owner: context.issue.owner,
            repo: context.issue.repo,
            issue_number: context.issue.number,
            body: process.env.MESSAGE
          });

    - name: Download attachment
      if: env.MATCH != 'false'
      id: download
      run: |
        echo "URL: ${{ env.MATCH }}"
        if [ -n "${{ env.MATCH }}" ]; then
          curl -O ${{ env.MATCH }} && echo "downloaded=true" >> $GITHUB_ENV || echo "downloaded=false" >> $GITHUB_ENV
        fi
        ls
      shell: bash
        
    - name: Send message if download failed
      uses: actions/github-script@v5
      if: env.downloaded == 'false'
      with:
        script: |
          const issue = context.issue;
          const message = '😢 Could not download the linked ZIP file.';

          github.rest.issues.createComment({
            owner: issue.owner,
            repo: issue.repo,
            issue_number: issue.number,
            body: message
          });

    - name: Unzip file
      if: env.downloaded == 'true'
      run: |
        mkdir -p structures
        unzip "${{ steps.respond.outputs.result }}" -d structures
        cd structures
        ls
        
    - name: Verify file extensions
      id: verify
      run: |
        shopt -s nocasematch
        if [ -z "$(ls -A structures)" ]; then
           echo "No files found in structures directory"
           echo "valid=false" >> $GITHUB_ENV
           exit 1
        fi
        for file in structures/*; do
          extension="${file##*.}"
          if [[ "$extension" != "poscar" && "$extension" != "cif" && "$extension" != "vasp" ]]; then
            echo "Invalid file extension: $file"
            echo "valid=false" >> $GITHUB_ENV
            exit 1
          fi
        done
        echo "valid=true" >> $GITHUB_ENV
        
    - name: Send message if file extensions are invalid
      uses: actions/github-script@v5
      if: env.valid == 'false'
      with:
        script: |
          const issue = context.issue;
          const message = '😢 The files supplied in ZIP do not have one of the required extensions: `poscar`, `cif`, or `vasp`.';

          github.rest.issues.createComment({
            owner: issue.owner,
            repo: issue.repo,
            issue_number: issue.number,
            body: message
          });

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      if: env.valid == 'true'
      with:
        python-version: "3.11"
        cache: 'pip'
        cache-dependency-path: 'featurization/requirements.txt'

    - name: Install dependencies
      if: env.valid == 'true'
      run: |
        python -m pip install -r featurization/requirements.txt

    - name: Test that pysipfenn is available
      if: env.valid == 'true'
      run: python -c "import pysipfenn; c = pysipfenn.Calculator()"
