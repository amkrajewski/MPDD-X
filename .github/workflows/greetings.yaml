name: User Greetings
on:
  issues:
    types: [opened]

jobs:
  respond:
    runs-on: ubuntu-latest
    steps:
      - name: Verify issue is not ENH, BUG, or FIX
        uses: actions/github-script@v5
        with:
          script: |
            const issueNumber = context.issue.number;
            const issue = await github.rest.issues.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber,
            });
            const title = issue.data.title;
            if (title.includes('[ENH]') || title.includes('[BUG]') || title.includes('[FIX]')) {
              console.log('Issue title contains [ENH], [BUG], or [FIX], cancelling workflow');
              const { owner, repo } = context.repo;
              const runId = context.runId;
              await github.rest.actions.cancelWorkflowRun({ owner, repo, run_id: runId });
            }
            
      - name: Respond to issue
        uses: actions/github-script@v5
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const issue_number = context.payload.issue.number;
            const username = context.payload.issue.user.login;
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue_number,
              body: `Hello @${username}! Please comment below on this issue while attaching a ZIP file with atomic structures (\`POSCAR\`/\`CIF\`s) to get started! You can put keywords describing it in the body of the comment.
      
              As soon as you do it, your atomic structures will be processed through several tools, described below, and return a neat Markdown report.
              - [\`pySIPFENN\`](https://github.com/PhasesResearchLab/pySIPFENN) framework, returning (1) array of descriptors (feature vectors) in Numpy \`.npy\` and \`CSV\` formats you can use for your ML modelling, alongside formation energy predictions.
              - [\`ALIGNN\`](https://github.com/usnistgov/alignn) framework, returning (1) results from 7 \`ALIGNN\` models [specified here](https://github.com/amkrajewski/mpdd-alignn/blob/main/alignn/config.yaml) and (2) compressed graph representation files.
              - [\`CHGNet\`](https://github.com/CederGroupHub/chgnet) model, returning (1) energy prediction for your input, (2) \`CHGNet\`-relaxed structures in the same format (\`POSCAR\`/\`CIF\`) as your input, and (3) energy prediction for the relaxed structures.`
            });
